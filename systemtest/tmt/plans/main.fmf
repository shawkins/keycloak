# TMT test plan definition
# https://tmt.readthedocs.io/en/latest/overview.html

# Baseline common for all test plans
#######################################################################
summary: Keycloak test suite
discover:
  how: fmf

# Required HW
provision:
  hardware:
    memory: ">= 16 GiB"
    cpu:
      processors: ">= 8"

# Install required packages and scripts for running keycloak suite
prepare:
  - name: Clean cache
    how : shell
    script: |
        OS=$(cat /etc/redhat-release || true)
        if [[ ${OS} == *"CentOS"* ]]; then
            sudo yum -y clean dbcache
        else
            sudo dnf -y clean dbcache
        fi

  - name: Install packages
    how: install
    package:
      - wget
      - java-17-openjdk-devel
      - xz
      - make
      - git
      - zip
      - coreutils

  - name: Install docker-ce
    how: shell
    script: |
      OS=$(cat /etc/redhat-release || true)
      if [[ ${OS} == *"CentOS"* ]]; then
        sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      else
        sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
      fi

      sudo yum install -y docker-ce
      sudo systemctl enable docker --now

  - name: Install yq
    how: shell
    script: |
      ARCH=$(uname -m)
      if [[ $ARCH == "x86_64" ]]; then ARCH="amd64"; fi
      if [[ $ARCH == "aarch64" ]]; then ARCH="arm64"; fi
      ./systemtest/tmt/scripts/install_yq.sh ${ARCH}

  - name: Install oc kubectl client
    how: shell
    script: |
      PLATFORM=$(uname -m)
      URL="http://mirror.openshift.com/pub/openshift-v4/${PLATFORM}/clients/ocp/stable/openshift-client-linux.tar.gz"
      mkdir -p /tmp/openshift   
      curl -fsSL -o openshift.tar.gz ${URL}
      tar xzf openshift.tar.gz -C /tmp/openshift
      sudo cp /tmp/openshift/oc /usr/bin/oc
      sudo cp /tmp/openshift/kubectl /usr/bin/kubectl
      sudo rm -rf /tmp/openshift/
      sudo rm -rf openshift.tar.gz

  - name: Install mvn
    how: shell
    script: |
      mkdir -p /usr/share/maven /usr/share/maven/ref
      curl -fsSL -o /tmp/apache-maven.tar.gz https://apache.osuosl.org/maven/maven-3/3.8.8/binaries/apache-maven-3.8.8-bin.tar.gz
      tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1
      rm -f /tmp/apache-maven.tar.gz
      ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
      
  - name: Install CRC
    how: shell
    script: |
      sudo dnf -y install xz NetworkManager systemd-container coreutils
      curl -fsSL -o /tmp/crc-linux-amd64.tar.xz https://developers.redhat.com/content-gateway/rest/mirror/pub/openshift-v4/clients/crc/latest/crc-linux-amd64.tar.xz
      xz -d /tmp/crc-linux-amd64.tar.xz
      mkdir -p /tmp/crc
      tar xf /tmp/crc-linux-amd64.tar -C /tmp/crc
      rm /tmp/crc-linux-amd64.tar            
      sudo cp /tmp/crc/*/crc /usr/bin/crc
      rm -rf /tmp/crc
      echo ${CRC_PULL_SECRET} | sed -r 's/!/=/' | base32 -d > /tmp/pull-secret.json 
      su - cloud-user
      crc config set skip-check-daemon-systemd-unit true 
      crc config set skip-check-daemon-systemd-sockets true
      # scrape the password
      crc setup
      oc login -u kubeadmin -p developer https://api.crc.testing:6443
      
# Discover tmt defined tests in tests/ folder
execute:
  how: tmt

# Post install step to copy logs
finish:
  how: shell
  script: ./systemtest/tmt/scripts/copy-logs.sh
#######################################################################

/smoke:
  summary: Run smoke keycloak test suite
  provision:
    hardware:
      memory: ">= 16 GiB"
      cpu:
        processors: ">= 8"
  discover+:
    test:
      - smoke
